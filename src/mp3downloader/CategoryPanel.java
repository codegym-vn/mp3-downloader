/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mp3downloader;

import com.mpatric.mp3agic.ID3v2;
import com.mpatric.mp3agic.ID3v24Tag;
import com.mpatric.mp3agic.InvalidDataException;
import com.mpatric.mp3agic.Mp3File;
import com.mpatric.mp3agic.NotSupportedException;
import com.mpatric.mp3agic.UnsupportedTagException;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.NoPlayerException;
import javax.media.Player;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author nhatnk
 */
public class CategoryPanel extends javax.swing.JPanel {

    private int selectedIndex = -1;
    Mp3DownloaderMain main;
    ArrayList<SongSubject> subjects;
    private SongTableModel songTableModel;
    int downloadedCount = 0;

    /**
     * Creates new form CategoryPanel
     */
    public CategoryPanel(Mp3DownloaderMain main) {
        this.main = main;
        initComponents();
    }

    public void setSubjects(ArrayList<SongSubject> subjects) {
        this.subjects = subjects;
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (SongSubject ss : subjects) {
            listModel.addElement(ss.getName());
        }
        this.jList1.setModel(listModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        btnPlay = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnDownloadAll = new javax.swing.JButton();
        lblLocation = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.LINE_START);

        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });
        jPanel4.add(btnPlay);

        btnStop.setText("Stop");
        jPanel4.add(btnStop);

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Songs");
        jPanel2.add(jLabel1);

        btnDownloadAll.setText("Download All");
        btnDownloadAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadAllActionPerformed(evt);
            }
        });
        jPanel2.add(btnDownloadAll);
        jPanel2.add(lblLocation);

        add(jPanel2, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDownloadAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadAllActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            lblLocation.setText(fileChooser.getSelectedFile().getAbsolutePath());
            if (selectedIndex != -1) {
                SongSubject ss = subjects.get(selectedIndex);
                ss.setNotification(new Notification() {
                    @Override
                    public void notify(String message) {
                        main.setStatus(message + " (" + downloadedCount + "/" + songTableModel.getSongs().size() + ")");
                    }

                    @Override
                    public void songDownloaded(String id) {
                        downloadedCount++;
                        songTableModel.refresh(id);
                        updateTags(id);
                    }

                });
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        ss.downloadAll(fileChooser.getSelectedFile().getAbsolutePath());
                    }
                }).start();
            }
        }
    }//GEN-LAST:event_btnDownloadAllActionPerformed

    private Song searchSong(String id) {
        for (Song song : songTableModel.getSongs()) {
            if (song.getId() == null ? id == null : song.getId().equals(id)) {
                return song;
            }
        }
        return null;
    }

    private void updateTags(String id) {
        try {
            Song song = searchSong(id);
            String originalPath = lblLocation.getText() + File.separator + id + "." + song.getType();
            Mp3File mp3file = new Mp3File(originalPath);
            ID3v2 id3v2Tag = null;
            if (mp3file.hasId3v2Tag()) {
                id3v2Tag = mp3file.getId3v2Tag();
            } else {
                id3v2Tag = new ID3v24Tag();
                mp3file.setId3v2Tag(id3v2Tag);
            }
            id3v2Tag.setTitle(song.getTitle());
                id3v2Tag.setArtist(song.getPerformer());
                SongSubject ss = subjects.get(selectedIndex);
                id3v2Tag.setAlbum(ss.getName());
            mp3file.save(lblLocation.getText() + File.separator + song.getTitle() + "." + song.getType());
            File file = new File(originalPath);
            file.delete();
        } catch (IOException ex) {
            Logger.getLogger(CategoryPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedTagException ex) {
            Logger.getLogger(CategoryPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidDataException ex) {
            Logger.getLogger(CategoryPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotSupportedException ex) {
            Logger.getLogger(CategoryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        int index = jList1.getSelectedIndex();
        if (index != selectedIndex) {
            selectedIndex = index;
        }
        if (selectedIndex != -1) {
            SongSubject ss = subjects.get(selectedIndex);
            main.setStatus("Loading subject");
            ss.load();
            ss.crawl();
            main.setStatus("Subject loaded: " + ss.getName());
            ArrayList<Song> songs = ss.getSongs();
            songTableModel = new SongTableModel(songs);
            jTable1.setModel(songTableModel);
            downloadedCount = 0;
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        int index = jTable1.getSelectedRow();
        if (index != -1) {
            try {
                String source = songTableModel.getSongs().get(index).getSource();
                URL url = new URL(source);

                URLConnection conn = url.openConnection();
                conn.addRequestProperty("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36");
                DataInputStream read = new DataInputStream(conn.getInputStream());
                AudioStream as = new AudioStream(read);
                AudioPlayer.player.start(as);
            } catch (MalformedURLException ex) {
                Logger.getLogger(CategoryPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(CategoryPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnPlayActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDownloadAll;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblLocation;
    // End of variables declaration//GEN-END:variables
}
